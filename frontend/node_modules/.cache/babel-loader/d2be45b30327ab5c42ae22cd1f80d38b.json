{"ast":null,"code":"var _jsxFileName = \"/Users/dianavargas/Desktop/codeplatoon/myproject/frontend/src/components/Weather/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DisplayWeather from \"./DisplayWeather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const [weather, setWeather] = useState([]);\n  const [form, setForm] = useState({\n    city: \"\",\n    country: \"\"\n  });\n  const APIKEY = \"f2002f7ae07db6bce3da0c22bea3c41f\";\n\n  async function weatherData(e) {\n    e.preventDefault();\n\n    if (form.city == \"\") {\n      alert(\"Add values\");\n    } else {\n      const data = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${form.city},${form.country}&APPID=${APIKEY}`).then(res => res.json()).then(data => data);\n      setWeather({\n        data: data\n      });\n    }\n  }\n\n  const handleChange = e => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    if (name == \"city\") {\n      setForm({ ...form,\n        city: value\n      });\n    }\n\n    if (name == \"country\") {\n      setForm({ ...form,\n        country: value\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Profile, {\n      img: \"https://www.flaticon.com/svg/vstatic/svg/752/752326.svg?token=exp=1619559165~hmac=1cb0da3e07a9e97a2a1b2f9b642c54a5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"city\",\n        name: \"city\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0 \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Country\",\n        name: \"country\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"getweather\",\n        onClick: e => weatherData(e),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), weather.data != undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DisplayWeather, {\n        data: weather.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"a7CWxBv8XTINrvZO3Mk90Ns9FHk=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/dianavargas/Desktop/codeplatoon/myproject/frontend/src/components/Weather/Weather.js"],"names":["React","useState","DisplayWeather","Weather","weather","setWeather","form","setForm","city","country","APIKEY","weatherData","e","preventDefault","alert","data","fetch","then","res","json","handleChange","name","target","value","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAGA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAC/BO,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,OAAO,EAAE;AAFsB,GAAD,CAAhC;AAKA,QAAMC,MAAM,GAAG,kCAAf;;AACA,iBAAeC,WAAf,CAA2BC,CAA3B,EAA8B;AAC5BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIP,IAAI,CAACE,IAAL,IAAa,EAAjB,EAAqB;AACnBM,MAAAA,KAAK,CAAC,YAAD,CAAL;AACD,KAFD,MAEO;AACL,YAAMC,IAAI,GAAG,MAAMC,KAAK,CACrB,qDAAoDV,IAAI,CAACE,IAAK,IAAGF,IAAI,CAACG,OAAQ,UAASC,MAAO,EADzE,CAAL,CAGhBO,IAHgB,CAGVC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHE,EAIhBF,IAJgB,CAIVF,IAAD,IAAUA,IAJC,CAAnB;AAMAV,MAAAA,UAAU,CAAC;AAAEU,QAAAA,IAAI,EAAEA;AAAR,OAAD,CAAV;AACD;AACF;;AAED,QAAMK,YAAY,GAAIR,CAAD,IAAO;AAC1B,QAAIS,IAAI,GAAGT,CAAC,CAACU,MAAF,CAASD,IAApB;AACA,QAAIE,KAAK,GAAGX,CAAC,CAACU,MAAF,CAASC,KAArB;;AAEA,QAAIF,IAAI,IAAI,MAAZ,EAAoB;AAClBd,MAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWE,QAAAA,IAAI,EAAEe;AAAjB,OAAD,CAAP;AACD;;AACD,QAAIF,IAAI,IAAI,SAAZ,EAAuB;AACrBd,MAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,QAAAA,OAAO,EAAEc;AAApB,OAAD,CAAP;AACD;AACF,GAVD;;AAWA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,GAAG,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,MAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAGX,CAAD,IAAOQ,YAAY,CAACR,CAAD;AAJ/B;AAAA;AAAA;AAAA;AAAA,cADF,qCAQE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,SAFd;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,QAAQ,EAAGA,CAAD,IAAOQ,YAAY,CAACR,CAAD;AAJ/B;AAAA;AAAA;AAAA;AAAA,cARF,eAcE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAGA,CAAD,IAAOD,WAAW,CAACC,CAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAwBGR,OAAO,CAACW,IAAR,IAAgBS,SAAhB,gBACC;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAEpB,OAAO,CAACW;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAIG,IA5BN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GAlEQZ,O;;KAAAA,O;AAmET,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport DisplayWeather from \"./DisplayWeather\"\n\n\nfunction Weather() {\n  const [weather, setWeather] = useState([]);\n  const [form, setForm] = useState({\n    city: \"\",\n    country: \"\",\n  });\n\n  const APIKEY = \"f2002f7ae07db6bce3da0c22bea3c41f\";\n  async function weatherData(e) {\n    e.preventDefault();\n    if (form.city == \"\") {\n      alert(\"Add values\");\n    } else {\n      const data = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${form.city},${form.country}&APPID=${APIKEY}`\n      )\n        .then((res) => res.json())\n        .then((data) => data);\n\n      setWeather({ data: data });\n    }\n  }\n\n  const handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    if (name == \"city\") {\n      setForm({ ...form, city: value });\n    }\n    if (name == \"country\") {\n      setForm({ ...form, country: value });\n    }\n  };\n  return (\n    <div>\n      <h1>Weather</h1>\n      <Profile img=\"https://www.flaticon.com/svg/vstatic/svg/752/752326.svg?token=exp=1619559165~hmac=1cb0da3e07a9e97a2a1b2f9b642c54a5\" />\n      <br />\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"city\"\n          name=\"city\"\n          onChange={(e) => handleChange(e)}\n        />\n        &nbsp; &nbsp; &nbsp;&nbsp;\n        <input\n          type=\"text\"\n          placeholder=\"Country\"\n          name=\"country\"\n          onChange={(e) => handleChange(e)}\n        />\n        <button className=\"getweather\" onClick={(e) => weatherData(e)}>\n          Submit\n        </button>\n      </form>\n\n      {/* {console.log(weather)} */}\n      {weather.data != undefined ? (\n        <div>\n          <DisplayWeather data={weather.data} />\n        </div>\n      ) : null}\n    </div>\n  );\n}\nexport default Weather;"]},"metadata":{},"sourceType":"module"}