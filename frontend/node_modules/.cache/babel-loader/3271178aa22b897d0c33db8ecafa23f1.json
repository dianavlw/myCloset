{"ast":null,"code":"// import closetAPI from \"../api/closetAPI\"\n// import { Jumbotron } from 'react-bootstrap'\n// import { Link } from \"react-router-dom\"\n// function LogIn(props) {\n//   async function handleLogin(e) {\n//     e.preventDefault()\n//     let credentails ={\n//       username: e.target.username.value,\n//       password: e.target.password.value\n//     }\n//     let data = await closetAPI.login(credentails)\n//     if(data && data.token){\n//       let userInfo = {\n//           token: data.token, \n//           user: data.user\n//       }\n//       props.handleLogin(userInfo)\n//       props.history.push(\"/\")\n//     }\n// }\n//   return (\n//   );\n// }\nexport default LogIn; // OLD CODE\n// function LogIn() {\n//   const [contact, setContact] = useState({\n//     userName: \"\",\n//     password: \"\"\n//   });\n//   function handleChange(event){\n//     const { name, value } = event.target;\n//     setContact(prevValue => {\n//       if(name === \"userName\") {\n//         return {\n//           userName: value,\n//           password: prevValue.password\n//         };\n//       } else if ( name === \"password\"){\n//         return {\n//           userName: prevValue.userName,\n//           password: value\n//         };\n//       }\n//     });\n//   }\n//   return (\n//       <div className=\"container\">\n//         <h1>\n//           Welcome Back {contact.userName}.\n//         </h1>\n//         <p>{contact.password}</p>\n//         <form>\n//           <input onChange={handleChange} value={contact.userName} name=\"userName\" placeholder=\"User Name\" />\n//           <input value={contact.password} name=\"password\" placeholder=\"Password\" />\n//           <button>Log in</button>\n//         </form>\n//       </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/dianavargas/Desktop/codeplatoon/myproject/frontend/src/components/LogIn/LogIn.js"],"names":["LogIn"],"mappings":"AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA,eAAeA,KAAf,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import closetAPI from \"../api/closetAPI\"\n// import { Jumbotron } from 'react-bootstrap'\n// import { Link } from \"react-router-dom\"\n\n\n// function LogIn(props) {\n//   async function handleLogin(e) {\n//     e.preventDefault()\n//     let credentails ={\n//       username: e.target.username.value,\n//       password: e.target.password.value\n//     }\n\n//     let data = await closetAPI.login(credentails)\n//     if(data && data.token){\n//       let userInfo = {\n//           token: data.token, \n//           user: data.user\n//       }\n//       props.handleLogin(userInfo)\n//       props.history.push(\"/\")\n//     }\n// }\n\n//   return (\n\n    \n//   );\n// }\nexport default LogIn;\n\n\n// OLD CODE\n\n// function LogIn() {\n//   const [contact, setContact] = useState({\n//     userName: \"\",\n//     password: \"\"\n//   });\n\n//   function handleChange(event){\n//     const { name, value } = event.target;\n\n//     setContact(prevValue => {\n//       if(name === \"userName\") {\n//         return {\n//           userName: value,\n//           password: prevValue.password\n//         };\n//       } else if ( name === \"password\"){\n//         return {\n//           userName: prevValue.userName,\n//           password: value\n//         };\n//       }\n//     });\n//   }\n\n//   return (\n//       <div className=\"container\">\n//         <h1>\n//           Welcome Back {contact.userName}.\n//         </h1>\n\n//         <p>{contact.password}</p>\n//         <form>\n//           <input onChange={handleChange} value={contact.userName} name=\"userName\" placeholder=\"User Name\" />\n//           <input value={contact.password} name=\"password\" placeholder=\"Password\" />\n//           <button>Log in</button>\n//         </form>\n//       </div>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}