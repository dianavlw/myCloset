{"ast":null,"code":"const BASE_URL = \"http://localhost:8000/admin/\";\n\nfunction defaultGetInit(token) {\n  return {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/JSON\",\n      \"Authorization\": `JWT ${token}`\n    }\n  };\n}\n\nasync function tryCatchFetch(url, init) {\n  try {\n    let response = await fetch(url, init);\n    let data = await response.json();\n\n    if (!response.ok) {\n      let error = {\n        status: response.status,\n        statusText: response.statusText,\n        message: data\n      };\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nasync function login(credentials) {\n  let init = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/JSON\"\n    },\n    body: JSON.stringify(credentials)\n  };\n  let url = BASE_URL + \"login/\";\n  return await tryCatchFetch(url, init);\n}\n\nasync function signUp(credentials) {\n  let init = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/JSON\"\n    },\n    body: JSON.stringify(credentials)\n  };\n  let url = BASE_URL + \"users/\";\n  return await tryCatchFetch(url, init);\n}\n\nasync function fetchCLoset(taskListId, token) {\n  return await tryCatchFetch(BASE_URL + `closet/${closetId}/`, defaultGetInit(token));\n}\n\nasync function fetchclothes(clothesId, token) {\n  return await tryCatchFetch(BASE_URL + `clothes/${clothesId}/`, defaultGetInit(token));\n}\n\nexport default {\n  login,\n  signUp,\n  fetchCLoset,\n  fetchClothes\n};","map":{"version":3,"sources":["/Users/dianavargas/Desktop/codeplatoon/myproject/frontend/src/api/closetAPI.js"],"names":["BASE_URL","defaultGetInit","token","method","headers","tryCatchFetch","url","init","response","fetch","data","json","ok","error","status","statusText","message","console","login","credentials","body","JSON","stringify","signUp","fetchCLoset","taskListId","closetId","fetchclothes","clothesId","fetchClothes"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,8BAAjB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,SAAO;AACHC,IAAAA,MAAM,EAAE,KADL;AAEHC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,uBAAkB,OAAMF,KAAM;AAFzB;AAFN,GAAP;AAOH;;AAED,eAAeG,aAAf,CAA6BC,GAA7B,EAAkCC,IAAlC,EAAwC;AACpC,MAAI;AACA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAMC,IAAN,CAA1B;AACA,QAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;;AAEA,QAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACd,UAAIC,KAAK,GAAG;AACRC,QAAAA,MAAM,EAAEN,QAAQ,CAACM,MADT;AAERC,QAAAA,UAAU,EAAEP,QAAQ,CAACO,UAFb;AAGRC,QAAAA,OAAO,EAAEN;AAHD,OAAZ;AAKA,YAAMG,KAAN;AACH;;AAED,WAAOH,IAAP;AACH,GAdD,CAeA,OAAOG,KAAP,EAAc;AACVI,IAAAA,OAAO,CAACJ,KAAR,CAAcA,KAAd;AACA,WAAO,IAAP;AACH;AACJ;;AAED,eAAeK,KAAf,CAAqBC,WAArB,EAAkC;AAC9B,MAAIZ,IAAI,GAAG;AACPJ,IAAAA,MAAM,EAAE,MADD;AAEPC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFF;AAKPgB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,WAAf;AALC,GAAX;AAOA,MAAIb,GAAG,GAAGN,QAAQ,GAAG,QAArB;AAEA,SAAO,MAAMK,aAAa,CAACC,GAAD,EAAMC,IAAN,CAA1B;AACH;;AAED,eAAegB,MAAf,CAAsBJ,WAAtB,EAAmC;AAC/B,MAAIZ,IAAI,GAAG;AACPJ,IAAAA,MAAM,EAAE,MADD;AAEPC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFF;AAKPgB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,WAAf;AALC,GAAX;AAOA,MAAIb,GAAG,GAAGN,QAAQ,GAAG,QAArB;AAEA,SAAO,MAAMK,aAAa,CAACC,GAAD,EAAMC,IAAN,CAA1B;AACH;;AAED,eAAeiB,WAAf,CAA2BC,UAA3B,EAAuCvB,KAAvC,EAA8C;AAC1C,SAAO,MAAMG,aAAa,CAACL,QAAQ,GAAI,UAAS0B,QAAS,GAA/B,EAAmCzB,cAAc,CAACC,KAAD,CAAjD,CAA1B;AACH;;AAED,eAAeyB,YAAf,CAA4BC,SAA5B,EAAuC1B,KAAvC,EAA8C;AAC1C,SAAO,MAAMG,aAAa,CAACL,QAAQ,GAAI,WAAU4B,SAAU,GAAjC,EAAqC3B,cAAc,CAACC,KAAD,CAAnD,CAA1B;AACH;;AAED,eAAe;AACXgB,EAAAA,KADW;AAEXK,EAAAA,MAFW;AAGXC,EAAAA,WAHW;AAIXK,EAAAA;AAJW,CAAf","sourcesContent":["const BASE_URL = \"http://localhost:8000/admin/\"\n\nfunction defaultGetInit(token) {\n    return {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/JSON\",\n            \"Authorization\": `JWT ${token}`\n        }\n    }\n}\n\nasync function tryCatchFetch(url, init) {\n    try {\n        let response = await fetch(url, init)            \n        let data = await response.json()\n\n        if (!response.ok) {\n            let error = {\n                status: response.status,\n                statusText: response.statusText,\n                message: data\n            }\n            throw(error)\n        }\n\n        return data\n    }\n    catch (error) {\n        console.error(error)\n        return null\n    }\n}\n\nasync function login(credentials) {\n    let init = {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/JSON\"\n        },\n        body: JSON.stringify(credentials)\n    }\n    let url = BASE_URL + \"login/\"\n\n    return await tryCatchFetch(url, init)\n}\n\nasync function signUp(credentials) {\n    let init = {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/JSON\"\n        },\n        body: JSON.stringify(credentials)\n    }\n    let url = BASE_URL + \"users/\"\n\n    return await tryCatchFetch(url, init)\n}\n\nasync function fetchCLoset(taskListId, token) {\n    return await tryCatchFetch(BASE_URL + `closet/${closetId}/`, defaultGetInit(token))\n}\n\nasync function fetchclothes(clothesId, token) {\n    return await tryCatchFetch(BASE_URL + `clothes/${clothesId}/`, defaultGetInit(token))\n}\n\nexport default {\n    login,\n    signUp,\n    fetchCLoset,\n    fetchClothes\n} "]},"metadata":{},"sourceType":"module"}